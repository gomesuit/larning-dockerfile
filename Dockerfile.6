FROM node:8.7.0-alpine as node

FROM ruby:2.4.1-alpine3.6

# timezone
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \
    apk del --purge tzdata

EXPOSE 3000

# user
RUN apk --no-cache add shadow
RUN useradd port -u 3333 -d /home/port && \
    mkdir -p /home/port/app && \
    chown port.port -R /home/port

WORKDIR /home/port/app

# install nodejs yarn
COPY --from=node /usr/local/bin/node /usr/local/bin/node
COPY --from=node /usr/local/include/node /usr/local/include/node
COPY --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=node /opt/yarn /opt/yarn
RUN ln -s /usr/local/bin/node /usr/local/bin/nodejs && \
    ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm && \
    ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn

RUN gem install bundler

# install dependency package
RUN apk --no-cache add tzdata sqlite-libs libstdc++

# bundle install
COPY Gemfile Gemfile.lock ./
RUN apk --no-cache --virtual gem-builddeps add alpine-sdk sqlite-dev && \
    bundle install --without development test --path vendor/bundle && \
    apk del --purge gem-builddeps

# yarn install
COPY package.json yarn.lock .postcssrc.yml ./
RUN yarn install

# assets precompile
COPY Rakefile .babelrc ./
COPY config config
COPY app/assets app/assets
COPY app/javascript app/javascript
COPY bin bin
RUN RAILS_ENV=production bundle exec rails assets:precompile

COPY . /home/port/app

RUN chown port.port log && \
    chown port.port -R db
USER port

CMD bundle exec puma -t 5:5 -p 3000 -e "$RAILS_ENV" -C config/puma.rb
